.animationwrapper{
    width: 100vw;
    height: 100vh;
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    opacity: 100%;
    transition: opacity 1s ease-in-out;
    
}

.textbox{
    font-family: 'Courier New', Courier, monospace;
    font-size: calc(100vw / 20);
    font-weight: 300;
    color: white;
    display: flex;
    justify-content: space-between;
    width: var(--textboxwidth);
    opacity: 0;
    transition-property: width, opacity;
    transition-duration: 1s, 2s;
    background-color: rgb(17,18,21);
    /* padding-right: calc(var(--textboxwidth) * 0.1); */
}

.hiddentext{
    font-size: calc(100vw / 20);
    font-family: 'Courier New', Courier, monospace;
    font-weight: 300;
    position: absolute;
    opacity: 0;
}

.lastname{
    position: relative;
}

.moveb{
    border: 1px solid green;
    box-sizing: border-box;
    background-color: inherit;
}

.spandelete{
    opacity: 100%;
    transition: opacity, 1s;
}

/* .bordersvg, rect{
    visibility: visible;
    display: block;
    position: absolute;
    width: calc(var(--bordersvgwidth) * 1.7);
    height: calc(var(--bordersvgheight) * 1.2);
    fill: transparent;
    stroke: white;
    stroke-width: calc(100vw / 200);
    stroke-dasharray: calc(100vw / 3);
    stroke-dashoffset: calc(100vw / 3);
    animation: draw 1s linear forwards;
    z-index: -1;
} */

.bordersvg{
    transform: translate(2%, 20%); 
}

.rectsvg{
    opacity: 0;
    display: block;
    width: calc(var(--bordersvgwidth) * 1.7);
    height: calc(var(--bordersvgheight) * 1.2);
    fill: transparent;
    stroke: white;
    stroke-width: calc(100vw / 200);
    stroke-dasharray: var(--strokedashvar);
    stroke-dashoffset: var(--strokedashvar);
    /* animation: var(--setanimation); */
    z-index: -1;
    /* -webkit-animation: draw 1s linear forwards;
    -webkit-animation-delay: 4200ms; */
    animation: draw 1s linear forwards;
    animation-delay: 4200ms;
}

svg{
    position: absolute;
    width: calc(var(--bordersvgwidth) * 1.7);
    height: calc(var(--bordersvgheight) * 1.2);
    transform: translate(2%, 20%); 
    z-index: -1;
    
}




@keyframes draw {
    0% {
        stroke-dashoffset: var(--strokedashvar);
    }

    100% {
        stroke-dashoffset: 0;
    }
}

@keyframes moveSpan {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(100%);
    }
  }

.spandelete{
    display: inline;
}